#server.port=6666
## mybatis对应的映射文件路径
#mybatis.mapper-locations=classpath:mapper/*.xml
#
#spring.shardingsphere.datasource.names=ds
#spring.shardingsphere.datasource.ds.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds.driverClassName=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.ds.url=jdbc:mysql://localhost:3309/ds_shardingjdbc_test?useSSL=false&useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
#spring.shardingsphere.datasource.ds.username=root
#spring.shardingsphere.datasource.ds.password=root
#
#
#
## 展示sql打印
#spring.shardingsphere.props.sql.show=true
#
## 自定义分表算法
##spring.shardingsphere.sharding.tables.user.table-strategy.standard.sharding-column=id
##spring.shardingsphere.sharding.tables.user.table-strategy.standard.precise-algorithm-class-name=com.example.MyCustomShardingAlgorithm
#
## 分表配置
#spring.shardingsphere.sharding.tables.user.actual-data-nodes=ds.user_$->{0..3}
## inline 表达式 （id类型转换 ->  id.longValue() -> user_${id.longValue() % 4}）
#spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_$->{id % 4}
#spring.shardingsphere.sharding.tables.user.key-generator.column=id
#spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE
